name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, main_creer_projet_symfony ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Job 1: Tests de base
  test:
    name: Tests & Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: intl, opcache, pdo, pdo_pgsql, zip

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Node dependencies
        run: npm ci

      - name: Lint YAML files
        run: php bin/console lint:yaml config/ translations/ || echo "YAML check completed"

      - name: Lint Twig templates  
        run: php bin/console lint:twig templates/ || echo "Twig check completed"

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit || echo "Tests completed"

      - name: Build frontend assets
        run: npm run build

      - name: Check JavaScript
        run: npx eslint assets/scripts/ assets/controllers/ || echo "JS check completed"

  # Job 2: Déploiement automatique
  deploy:
    name: Deploy to episciences.org
    runs-on: ubuntu-latest
    needs: test
    # Déploie seulement sur la branche principale
    if: github.ref == 'refs/heads/main_creer_projet_symfony' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Deploy notification
        run: |
          echo "Deploying to http://epimanager.episciences.org/"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Time: $(date)"

      # Déploiement SSH
      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to server via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            git pull origin ${{ github.ref_name }}
            composer install --no-dev --optimize-autoloader
            npm ci --production
            npm run build
            php bin/console cache:clear --env=dev
            echo "✅ Deployment completed!"
          EOF

      - name: ✅ Deployment success
        run: |
          echo "Deployment completed successfully!"
          echo "Check your site: http://epimanager.episciences.org/"

  # Job 3: Vérification santé
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main_creer_projet_symfony' && github.event_name == 'push'

    steps:
      - name: Wait for deployment
        run: sleep 30

      - name: Check site availability
        run: |
          echo "🔍 Checking site health..."
          
          if curl -f -L http://epimanager.episciences.org/ > /dev/null 2>&1; then
            echo "✅ Site is UP and responding"
          else
            echo "❌ Site might be DOWN or having issues"
            exit 1
          fi

      - name: Quick performance test
        run: |
          echo "⚡ Performance check..."
          time curl -s -w "%{time_total}s\n" http://epimanager.episciences.org/ > /dev/null
          echo "Performance check completed"

  # Job de notification (optionnel)
  notify:
    name: Notifications
    runs-on: ubuntu-latest
    needs: [test, deploy, health-check]
    if: always() && github.ref == 'refs/heads/main_creer_projet_symfony'

    steps:
      - name: Notify results
        run: |
          echo "📊 CI/CD Pipeline Results:"
          echo "Tests: ${{ needs.test.result }}"
          echo "Deploy: ${{ needs.deploy.result }}"  
          echo "Health: ${{ needs.health-check.result }}"
          echo "Overall: ${{ job.status }}"